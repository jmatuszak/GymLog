@using GymLog.ViewModels
@model WorkoutsAndTemplatesVM




<div class="container1">

	<div class="box box40">
		<div class="box box2">
		<h2>Your Templates:</h2>
		@if (Model.UserTemplatesVM != null)
		{
			<table>
				@foreach (var Item in Model.UserTemplatesVM)
				{

					@if (Item != null)
					{
						<tr class="noBorder">
							<td>
								@Item.Name
							</td>
							<td>
								<a asp-controller="Workout" asp-action="Execute" asp-route-id="@Item.Id" class="btn btn-sm btn-outline-info">Execute</a>
							</td>
						</tr>
					}
				}
			</table>
				<a id="marginedButton" asp-controller="Template" asp-action="Create" class="btn btn-sm btn-outline-info ">New Template</a>

		}
		</div>
		<div class="box box30">
			<h2>Sample Templates:</h2>
		@if (Model.SampleTemplatesVM != null)
		{
			<table>
				@foreach (var Item in Model.SampleTemplatesVM)
				{

					@if (Item != null)
					{
						<tr class="noBorder">
							<td>
								@Item.Name
							</td>
							<td>
								<a asp-controller="Workout" asp-action="Execute" asp-route-id="@Item.Id" class="btn btn-sm btn-outline-info">Execute</a>
							</td>
						</tr>
					}
				}
			</table>
		}
			<a id="marginedButton" asp-controller="Workout" asp-action="Create" class="btn btn-sm btn-outline-info ">New Workout</a>

		</div>
	</div>
		<div class="box box60">

		@await Component.InvokeAsync("Statistics")


		@await Component.InvokeAsync("ExerciseProgress")
		@await Component.InvokeAsync("FavouriteExercisesChart")
		@await Component.InvokeAsync("MostWeightExercisesChart")

		</div>
	</div>
@*
@await Component.InvokeAsync("MaxWeight")
*@




